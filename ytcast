#!/usr/bin/env ruby

require 'optparse'
require 'net/http'
require 'cgi'
require 'simple_upnp'

def yt_video_id(uri_str)
  case uri_str
  when /^https?:\/\/youtu\.be\//
    URI.parse(uri_str).path.sub('/', '')
  when /^https?:\/\/(www\.)?youtube\.com\/embed\//
    URI.parse(uri_str).path.sub('/embed/', '')
  when /^https?:\/\/(www\.)?youtube\.com\/v\//
    URI.parse(uri_str).path.sub('/v/', '')
  when /^https?:\/\/(www\.)?youtube\.com\/watch\?/, /^\/watch\?/
    CGI.parse(URI.parse(uri_str).query)['v'].first
  else
    nil
  end
end

dev_name = nil
host = nil
port = 8008
mode = nil

OptionParser.new do |opts|
  opts.on('-?', '--help') { puts opts; exit }
  opts.on('-n', '--name DEVICE') {|arg| name = arg }
  opts.on('-h', '--host HOST') {|arg| host = arg }
  opts.on('-p', '--port PORT') {|arg| port = arg }
  opts.on('-q', '--status') { mode = :status }
  opts.on('-s', '--stop') { mode = :stop }
end.parse!

unless host && port
  SimpleUpnp::Discovery.find do |device|
    dev_info = device.to_json(true) # not actually JSON
    dev_type = dev_info['root']['device']['deviceType'] rescue nil
    if dev_type && dev_type.start_with?('urn:dial-multiscreen-org:')
      friendly_name = dev_info['root']['device']['friendlyName'] rescue nil
      if dev_name.nil? || friendly_name == dev_name
        base_uri = URI.parse(dev_info['root']['URLBase'])
        puts "discovered #{friendly_name} at #{base_uri}"
        host = base_uri.host
        port = base_uri.port
        break
      end
    end
  end
end

http = Net::HTTP.new(host, port)
path = '/apps/YouTube'

case mode
when :status
  res = http.get(path)
  puts res.body
when :stop
  res = http.delete(path)
  puts res.code == '200' ? 'stopped playback' : "error #{res.code}"
else
  if video_id = yt_video_id(ARGV.shift)
    res = http.post(path, URI.encode_www_form(v: video_id))
    puts res.code == '201' ? "playing #{video_id}" : "error #{res.code}"
  else
    STDERR.puts "usage: ytcast [options] VIDEO_URL"
    exit 2
  end
end
