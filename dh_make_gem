#!/usr/bin/ruby

require 'rubygems'
require 'yaml'

DH_MAKE_DIR = '/usr/share/debhelper/dh_make'

RULES='''\
#!/usr/bin/make -f

%:
	dh $@
'''

class DebGem
  class << self
    def dh_tmpl(t)
      def fill(a, spec)
        if a.respond_to? :call
          a.call(spec)
        elsif spec.respond_to? a
          val = spec.send(a)
          if val.respond_to? :join
            val.join(', ')
          else
            val.to_s.strip
          end
        else
          a.to_s
        end
      end
      proc do |spec|
        text = open("#{DH_MAKE_DIR}/#{t}").read
        @@pkg_attrs.each {|var, a| text.gsub! var, fill(a, spec) }
        text
      end
    end
  end

  @@templates = { 'changelog' => dh_tmpl('debian/changelog'),
                  'compat' => "7",
                  'control' => dh_tmpl('debians/control'),
                  'copyright' => dh_tmpl('licenses/blank'),
                  'docs' => proc {|s| s.extra_rdoc_files.join("\n")},
                  'rules' => RULES }

  @@pkg_attrs = { '#PACKAGE#' => proc {|s| "lib#{s.name}-ruby" },
                  '#DATE#' => Time.now.strftime("%a, %d %b %Y %H:%M:%S %z"),
                  '#YEAR#' => Time.now.strftime("%Y"),
                  '#POLICY#' => "3.8.0",
                  '#BUILD_DEPS#' => "debhelper (>= 7)",
                  '#VERSION#' => :version,
                  '<insert the upstream URL, if relevant>' => :homepage,
                  '<url://example.com>' => :homepage,
                  "<put author's name and email here>\n" +
                                  "<likewise for another author>" => :authors,
                  '<insert up to 60 chars description>' => :summary,
                  '<insert long description, indented with spaces>' =>
                                                                :description,
                  '#USERNAME#' => ENV['DEBFULLNAME'] || 'Unknown Maintainer',
                  '#EMAIL#' => ENV['EMAIL'] || 'unknown@dh.invalid' }

  def initialize(gem_path)
    # ought to make a temp dir for this
    system 'tar', 'xf', gem_path
    @spec = YAML::load(IO::popen('zcat metadata.gz'))
    @pkg_dir = "lib#{@spec.name}-ruby-#{@spec.version}"
    @deb_dir = "#{@pkg_dir}/debian"
    Dir.mkdir @pkg_dir
    Dir.mkdir @deb_dir
    system 'tar', 'xzf', 'data.tar.gz', '-C', @pkg_dir
    system 'cp', '-a', @pkg_dir, "#{@pkg_dir}.orig"
    File.unlink 'metadata.gz', 'data.tar.gz'
  end

  def create_stub(name, &block)
    File.open("#{@deb_dir}/#{name}", 'w', &block)
  end

  def write_stubs
    @@templates.each do |name, tmpl|
      self.create_stub name do |f|
        if tmpl.respond_to? :call
          f.puts tmpl.call(@spec)
        else
          f.puts tmpl
        end
      end
    end
  end
end

deb = DebGem.new(ARGV[0])
deb.write_stubs
