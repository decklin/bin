#!/usr/bin/ruby

# This should produce something validating & usable on my dumbphone, and fit
# on a printed page. Otherwise, I'd use Haml and XHTML like sane people.

require 'rubygems'
require 'sinatra'

class List
  def initialize(p); @path = p; throw :halt, 403 if @path =~ /[^\w.-]/; end
  def load; File.exists?(@path) ? File.open(@path).read.split($/) : []; end
  def save(items); File.open(@path, 'w') {|f| f.puts(items.join($/)) }; end
end

configure do
  set :static, true
  set :public, 'public'
end

get '/' do
  erb :welcome
end

post '/' do
  redirect request.url + params[:id], 303
end

get '/:id' do
  @items = List.new(params[:id]).load
  erb :tickyboxes
end

put '/:id' do
  List.new(params[:id]).save(request.body.read.split($/))
  redirect request.url, 303
end

post '/:id' do
  l = List.new(params[:id])
  l.save(l.load - params[:del].to_a + params[:add].to_a)
  redirect request.url, 303
end

__END__

@@ layout
<!DOCTYPE html>
<title>Groceries</title>
<link rel="shortcut icon" href="/grocery_icon.png">
<meta name="viewport" content="width=device-width">
<form method="post"><%= yield %></form>

@@ welcome
<p>Create/view a list: <input type="text" name="id"> <input type="submit">
<p>Or upload a text file: <kbd>curl -T list <%= request.url %></kbd>

@@ tickyboxes
<% @items.each do |i| %><input type="checkbox" name="del" value="<%= i %>">
<%= i %><br><% end %><p><input type="text" name="add" autofocus>
<p><input type="submit">
